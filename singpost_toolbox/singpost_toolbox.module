<?php

use Drupal\Core\Url;
use Drupal\singpost_toolbox_calculate_postage\Frontend\Form\CalculateMailForm;
use Drupal\singpost_toolbox_calculate_postage\Frontend\Form\CalculateOverseaForm;
use Drupal\singpost_toolbox_calculate_postage\Frontend\Form\CalculatePackageForm;
use Drupal\singpost_toolbox_find_postal_code\Form\Frontend\LandmarkForm;
use Drupal\singpost_toolbox_find_postal_code\Form\Frontend\POBoxForm;
use Drupal\singpost_toolbox_find_postal_code\Form\Frontend\StreetForm;
use Drupal\singpost_toolbox_locate_us\Frontend\Form\LocateUsForm;
use Drupal\singpost_toolbox_redirect_redeliver\Form\Frontend\RedirectRedeliverForm;
use Drupal\singpost_toolbox_track_and_trace\Frontend\Form\TrackAndTraceForm;

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 *
 * @return array
 */
function singpost_toolbox_theme($existing, $type, $theme, $path){
	return [
		'form_element__toolbox_form' => [
			'template'  => 'form-element--toolbox-form',
			'base hook' => 'form-element'
		],
		'singpost_toolbox_side'      => [
			'template'  => 'block--singpost-toolbox-side',
			'variables' => [
				'forms' => []
			]
		],
		'singpost_toolbox_node'      => [
			'template'  => 'block--singpost-toolbox-node',
			'variables' => [
				'form' => ''
			]
		]
	];
}

/**
 * @return array
 */
function singpost_toolboxes(){
	$toolbox_pages = [];

	$module_handler = Drupal::service('module_handler');

	if ($module_handler->moduleExists('singpost_toolbox_find_postal_code')){
		$toolbox_pages['find_postal_code'] = Url::fromRoute('singpost.toolbox.find_postal_code.index')
		                                        ->toString();
	}

	if ($module_handler->moduleExists('singpost_toolbox_locate_us')){
		$toolbox_pages['locate_us'] = Url::fromRoute('singpost.toolbox.locate_us.index')
		                                 ->toString();
	}

	if ($module_handler->moduleExists('singpost_toolbox_redirect_redeliver')){
		$toolbox_pages['redelivery_redirect'] = Url::fromRoute('singpost.toolbox.redirect_redeliver.index')
		                                           ->toString();
	}

	if ($module_handler->moduleExists('singpost_toolbox_track_and_trace')){
		$toolbox_pages['track_and_trace'] = Url::fromRoute('singpost.toolbox.track_and_trace.index')
		                                       ->toString();
	}

	if ($module_handler->moduleExists('singpost_toolbox_calculate_postage')){
		$toolbox_pages['calculate_singapore'] = Url::fromRoute('singpost.toolbox.calculate.singapore.index')
		                                           ->toString();
		$toolbox_pages['calculate_overseas']  = Url::fromRoute('singpost.toolbox.calculate.overseas.index')
		                                           ->toString();
	}

	return $toolbox_pages;
}

/**
 * Implements hook_page_attachments().
 *
 * @param array $attachments
 */
function singpost_toolbox_page_attachments(array &$attachments){
	$config = Drupal::config('simple_recaptcha.config');
	$js     = " 
		var recaptchaNode;
		var recaptchaSidebar;
		var recaptchaFpcNode, recaptchaFpcNode2, recaptchaFpcNode3;
		var recaptchaCPNode, recaptchaCPNode2, recaptchaCPNode3;
		var recaptchaRRNode, recaptchaLocateNode;
		var recaptchaTnt;
		var onloadRecaptchaCallback = function (token) {
			
			if(jQuery('form').find('#recaptcha-node').length){
				recaptchaNode = grecaptcha.render('recaptcha-node', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-str').length){
				recaptchaFpcNode = grecaptcha.render('recaptcha-str', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-lm').length){
				recaptchaFpcNode2 = grecaptcha.render('recaptcha-lm', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-po').length){
				recaptchaFpcNode3 = grecaptcha.render('recaptcha-po', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-cmail').length){
				recaptchaCPNode = grecaptcha.render('recaptcha-cmail', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-cpackage').length){
				recaptchaCPNode2 = grecaptcha.render('recaptcha-cpackage', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-coversea').length){
				recaptchaCPNode3 = grecaptcha.render('recaptcha-coversea', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-redirect').length){
				recaptchaRRNode = grecaptcha.render('recaptcha-redirect', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			
			if(jQuery('form').find('#recaptcha-locate-us').length){
				recaptchaLocateNode = grecaptcha.render('recaptcha-locate-us', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			}
			    
			if(jQuery('form').find('#recaptcha-side').length){
			    recaptchaSidebar = grecaptcha.render('recaptcha-side', {
			        'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
			    });
			}
			
			if(jQuery('form').find('#recaptcha-track-and-trace').length){
				recaptchaTnt = grecaptcha.render('recaptcha-track-and-trace', {
				    'sitekey': '{$config->get('site_key')}',
			        'callback' : function(){
			            jQuery('form[data-recaptcha-submit=true]').submit();
			        }
				});
			} 
		};
    ";

	$attachments['#attached']['html_head'][] = [
		[
			'#tag'    => 'script',
			'#value'  => $js,
			'#weight' => - 1,
		],
		'google_recaptcha'
	];
}

/**
 * @param $variables
 */
function singpost_toolbox_preprocess_page(&$variables){
	$toolbox_pages = singpost_toolboxes();

	$current_path = Drupal::service('path.current')->getPath();
	$alias        = Drupal::service('path_alias.manager')
	                      ->getAliasByPath($current_path);

	if (!empty($toolbox_pages['find_postal_code']) && $alias !== $toolbox_pages['find_postal_code']){
		$street = new StreetForm();
		$street->clearForm();

		$landmark = new LandmarkForm();
		$landmark->clearForm();

		$pobox = new POBoxForm();
		$pobox->clearForm();
	}

	if (!empty($toolbox_pages['track_and_trace']) && $alias !== $toolbox_pages['track_and_trace']){
		$tnt = new TrackAndTraceForm();
		$tnt->clearForm();
	}

	if (!empty($toolbox_pages['redirect_redeliver']) && $alias !== $toolbox_pages['redirect_redeliver']){
		$redirect = new RedirectRedeliverForm();
		$redirect->clearForm();
	}

	if (!empty($toolbox_pages['locate_us']) && $alias !== $toolbox_pages['locate_us']){
		$locate_us = new LocateUsForm();
		$locate_us->clearForm();
	}

	if (!empty($toolbox_pages['calculate_singapore']) && $alias !== $toolbox_pages['calculate_singapore']){
		$mail = new CalculateMailForm();
		$mail->clearForm();

		$package = new CalculatePackageForm();
		$package->clearForm();
	}

	if (!empty($toolbox_pages['calculate_overseas']) && $alias !== $toolbox_pages['calculate_overseas']){
		$oversea = new CalculateOverseaForm();
		$oversea->clearForm();
	}
}

/**
 * @param array $suggestions
 * @param array $variables
 */
function singpost_toolbox_theme_suggestions_form_element_alter(
	array &$suggestions,
	array $variables){

	$toolbox_pages = singpost_toolboxes();

	$current_path = Drupal::service('path.current')->getPath();
	$alias        = Drupal::service('path_alias.manager')
	                      ->getAliasByPath($current_path);

	if (in_array($alias, $toolbox_pages)){
		$suggestions[] = $variables['theme_hook_original'] . '__toolbox_form';
	}
}