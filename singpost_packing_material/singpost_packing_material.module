<?php

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;


/**
 * Implements hook_theme().
 */
function singpost_packing_material_theme($existing, $type, $theme, $path){
	return [
		'singpost_pm_post_office'              => [
			'templates' => 'singpost-pm-post-office',
			'variables' => [
				'data' => []
			]
		],
		'singpost_pm_navigation'               => [
			'templates' => 'singpost-pm-navigation',
			'variables' => [
				'menus'  => [],
				'config' => []
			]
		],
		'singpost_pm'                          => [
			'templates' => 'singpost-pm',
			'variables' => [
				'data' => [],
				'config' => []
			]
		],
		'singpost_pm_single_product'            => [
			'templates' => 'singpost-pm-single-product',
			'variables' => [
				'data' => []
			]
		],
		'singpost_pm_cart_summary'            => [
			'templates' => 'singpost-pm-cart-summary',
			'variables' => [
				'data' => []
			]
		],
		'form_element__pm_frontend_order_form' => [
			'template'  => 'form-element--pm-frontend-order-form',
			'base hook' => 'form-element'
		],
		'singpost_pm_cart_checkout' => [
			'template'  => 'singpost-pm-cart-checkout',
			//'base hook' => 'form-element--pm-form',
			'variables' => [
				'data' => []
			]
		],
		'singpost_pm_cart_thanks' => [
			'template'  => 'singpost-pm-cart-thanks',
			//'base hook' => 'form-element--pm-form',
			'variables' => [
				'data' => []
			]
		],
		'pm_frontend_order_form' => [
		      'render element' => 'form',
		      'base hook' => 'form-element--pm-form',
		    
		 ],
		'form_element__pm_form' => [
	      // base_hook is important!
	      // Otherwise your template won't know what to render.
	      'base hook' => 'form_element',
	    ],
		'singpost_confirmation'                => [
			'templates' => 'singpost-confirmation',
			'variables' => [
				'data' => []
			]
		],
		'singpost_email_notify_customer'       => [
			'templates' => 'singpost-email-notify-customer',
			'variables' => [
				'data' => []
			]
		],
		'singpost_email_notify_order_detail'   => [
			'templates' => 'singpost-email-notify-order-detail',
			'variables' => [
				'data' => []
			]
		]
	];
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function singpost_packing_material_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'pm-frontend-order-form') {
    // Optional, in case, if you want to remove the title and ise own placeholder.
    if (isset($form['keywords']) && $form['keywords']['#type'] == 'textfield') {
      $form['keywords']['#attributes']['placeholder'] = t('My custom placeholder');
      unset($form['keywords']['#title']);
    }
  }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * @param array $suggestions
 * @param array $variables
 */
function singpost_packing_material_theme_suggestions_form_element_alter(
	array &$suggestions,
	array $variables){

	$index = Url::fromRoute('singpost.pm.index')
	            ->toString();
	$checkout = Url::fromRoute('singpost.pm.checkout')
	            ->toString();
	

	$current_path = Drupal::service('path.current')->getPath();
	$alias        = Drupal::service('path_alias.manager')
	                      ->getAliasByPath($current_path);

	if ($alias == $index){
		$suggestions[] = $variables['theme_hook_original'] . '__pm_frontend_order_form';
	} 

	if ($alias == $checkout){
	 	//$suggestions[] = 'form_element__pm_form';
	}
}

/**
 * Implementes hook_page_attachments_alter().
 */
function singpost_packing_material_page_attachments_alter(&$page){

	 //$current_path = Drupal::service('path.current')->getPath();
	 $current_path 	= \Drupal::service('path.current')->getPath();
	 $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

    // Check if the alias is the one you want
    if ($alias == '/packing-material' || $alias == '/packing-materials') {

      // Attach the library you just created before in yout .theme file
      $page['#attached']['library'][] = 'singpost_packing_material/packing-material';

    }
	  
}

/**
 * Implements hook_mail().
 */
function singpost_packing_material_mail($key, &$message, $params){
	switch ($key){
		case 'packing_material_notify':
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed;';
			$message['from']                    = $params['from'];
			$message['subject']                 = $params['subject'];
			$message['body'][]                  = $params['body'];
			break;
	}
}